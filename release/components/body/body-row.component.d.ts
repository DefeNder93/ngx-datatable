import { ElementRef, KeyValueDiffers, EventEmitter, ChangeDetectorRef, DoCheck, OnInit } from '@angular/core';
import { ScrollbarHelper } from '../../services';
import { Subject } from 'rxjs/Subject';
import { RowSharedData } from '../../services/row-shared-data.service';
import { BehaviorSubject } from 'rxjs/BehaviorSubject';
import { Observable } from 'rxjs/Observable';
import 'rxjs/add/observable/of';
import 'rxjs/add/observable/combineLatest';
import 'rxjs/add/operator/takeUntil';
import 'rxjs/add/operator/startWith';
import 'rxjs/add/operator/map';
export declare class DataTableBodyRowComponent implements DoCheck, OnInit {
    private differs;
    private scrollbarHelper;
    private cd;
    private rowSharedData;
    responsive$: BehaviorSubject<boolean>;
    ngOnInit(): void;
    ngOnDestroy(): void;
    columns$: BehaviorSubject<any[]>;
    _columnsResize: Subject<any>;
    private getColumnsObserverable;
    visibleColumns$: Observable<any[]>;
    collapsedColumns$: Observable<any[]>;
    columnsResize: Subject<any>;
    sorts: any[];
    private destroy$;
    columns: any[];
    innerWidth: number;
    expanded: boolean;
    rowClass: any;
    row: any[];
    _row: any;
    group: any;
    isSelected: boolean;
    rowIndex: number;
    displayCheck: any;
    offsetX: number;
    toggleColumnExpand: (e: any) => boolean;
    readonly cssClass: string;
    rowHeight: number;
    readonly columnsTotalWidths: string;
    activate: EventEmitter<any>;
    _element: any;
    _columnGroupWidths: any;
    _columnsByPin: any;
    _offsetX: number;
    _columns: any[];
    _innerWidth: number;
    _groupStyles: {
        left: {};
        center: {};
        right: {};
    };
    private _rowDiffer;
    constructor(differs: KeyValueDiffers, scrollbarHelper: ScrollbarHelper, cd: ChangeDetectorRef, rowSharedData: RowSharedData, element: ElementRef);
    ngDoCheck(): void;
    trackByGroups(index: number, colGroup: any): any;
    columnTrackingFn(index: number, column: any): any;
    buildStylesByGroup(): void;
    calcStylesByGroup(group: string): {
        width: string;
    };
    onActivate(event: any, index: number): void;
    onKeyDown(event: KeyboardEvent): void;
    onMouseenter(event: any): void;
    recalculateColumns(val?: any[]): void;
}
